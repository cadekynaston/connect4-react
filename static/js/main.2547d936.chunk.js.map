{"version":3,"sources":["Components/GamePiece/GamePiece.js","Components/GameBoard/GameBoard.js","Components/GameInfo/GameInfo.js","Components/resources/game.js","Components/Connect4/Connect4.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","style","backgroundColor","color","onClick","columnClick","column","onMouseOver","previewSelection","className","concat","preview","GameBoard","gamePieces","game","board","map","i","piece","j","previewCell","row","cellColor","players","currentPlayer","GamePiece_GamePiece","key","selectColumn","GameInfo","currentGameState","winner","Game","Object","classCallCheck","this","push","playersMove","rowsLeftInColumn","Array","fill","timeStamp","Date","now","checkForWinner","updateCurrentPlayer","vertical","horizontal","downRight","downLeft","Connect4","_this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","restartGame","updateBoard","setState","prevState","Fragment","GameInfo_GameInfo","GameBoard_GameBoard","React","Component","App","Components_Connect4_Connect4","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2547d936.chunk.js","sourcesContent":["import React from 'react'\n\nfunction GamePiece(props) {\n\n  let handleClick = () => {\n    props.columnClick(props.column)\n  }\n\n  let handleHover = () => {\n    props.previewSelection(props.column)\n  }\n\n  return (\n\n    <div\n      style={{backgroundColor: props.color}}\n      onClick={handleClick}\n      onMouseOver={handleHover}\n      className={`game-piece ${props.preview && 'preview'}`} >\n    </div>\n  )\n}\n\nexport default GamePiece\n","import React from 'react'\n\nimport GamePiece from '../GamePiece/GamePiece'\n\nfunction GameBoard(props) {\n  let gamePieces = props.game.board.map((column, i) => {\n    return column.map((piece, j) => {\n\n      let preview = (props.game.previewCell.row === i && props.game.previewCell.column === j);\n      let cellColor = preview\n        ? props.game.players[props.game.currentPlayer].color\n        : piece.color\n\n      return  (\n        <GamePiece\n          key={`${i}${j}`}\n          column={j}\n          row={i}\n          color={cellColor}\n          columnClick={props.selectColumn}\n          previewSelection={props.previewSelection}\n          preview={preview}\n        />\n      )\n    })\n  })\n\n  return (\n    <div className=\"game-board\" >\n      {gamePieces}\n    </div>\n  )\n\n}\n\nexport default GameBoard\n\n","import React from 'react'\n\nfunction GameInfo(props) {\n\n  let currentGameState = props.game.winner\n    ? `Player ${props.game.currentPlayer + 1} wins!`\n    : `Player ${props.game.currentPlayer + 1}'s turn`\n\n  return (\n    <div className=\"game-info\">\n      <h1>Connect 4&nbsp;\n        <span style={{color:\"#61DAFB\"}}>React</span>\n      </h1>\n      <h2>{currentGameState}</h2>\n    </div>\n  )\n}\n\nexport default GameInfo\n","class Game {\n\n  constructor() {\n\n    this.board = [];\n    for (let i = 0; i < 6; i++) {\n      let column = [];\n      for (let j = 0; j < 7; j++) {\n        column.push({\n          color: '#FFF',\n          row: i,\n          column: j,\n          playersMove: null,\n        })\n      }\n      this.board.push(column);\n    }\n\n    this.players = [\n      {\n        color: '#D55A49'\n      }, {\n        color: '#CFB961'\n      }\n    ]\n\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    this.currentPlayer = 0;\n    this.winner = false\n    this.rowsLeftInColumn = Array(7).fill(5)\n  }\n\n  updateBoard(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n\n    this.board[this.rowsLeftInColumn[column]][column] = {\n      color: this.players[this.currentPlayer].color,\n      playersMove: this.currentPlayer,\n      timeStamp: Date.now(),\n    }\n\n    this.rowsLeftInColumn[column] -= 1;\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    if (this.checkForWinner()) return\n    this.updateCurrentPlayer();\n  }\n\n  previewSelection(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n    this.previewCell = {\n      row: this.rowsLeftInColumn[column],\n      column\n    }\n\n\n  }\n\n  updateCurrentPlayer() {\n    this.currentPlayer = this.currentPlayer ? 0 : 1\n  }\n\n  checkForWinner() {\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (this.vertical(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.horizontal(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.downRight(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 3; j < 7; j++) {\n        if (this.downLeft(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n  }\n\n  vertical(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n\n  horizontal(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downRight(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downLeft(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row - i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n}\n\nexport default Game\n","import React from 'react'\n\nimport GameBoard from '../GameBoard/GameBoard'\nimport GameInfo from '../GameInfo/GameInfo'\nimport Game from '../resources/game';\n\n\nclass Connect4 extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      game: new Game()\n    }\n\n    this.selectColumn = this.selectColumn.bind(this)\n    this.previewSelection = this.previewSelection.bind(this)\n    this.restartGame = this.restartGame.bind(this)\n  }\n\n  selectColumn(column) {\n\n    if (this.state.game.winner) return\n\n    this.state.game.updateBoard(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n\n    this.previewSelection(column)\n\n  }\n\n  previewSelection(column) {\n\n    if (this.state.game.winner) return\n\n    this.state.game.previewSelection(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n\n  }\n\n  restartGame() {\n    this.setState({\n      game: new Game()\n    })\n  }\n\n  render() {\n\n    return (\n      <>\n        <GameInfo\n          restartGame={this.restartGame}\n          game={this.state.game}\n        />\n        <GameBoard\n          selectColumn={this.selectColumn}\n          previewSelection={this.previewSelection}\n          game={this.state.game}\n        />\n      </>\n    )\n  }\n}\n\nexport default Connect4\n\n","import React, { Component } from 'react';\n\nimport Connect4 from './Components/Connect4/Connect4';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Connect4 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}