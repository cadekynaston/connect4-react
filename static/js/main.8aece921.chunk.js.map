{"version":3,"sources":["Components/GamePiece/GamePiece.js","Components/GameBoard/GameBoard.js","Components/PlayerInfo/PlayerInfo.js","Components/GameInfo/GameInfo.js","Components/resources/game.js","Components/Connect4/Connect4.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","style","backgroundColor","color","onClick","columnClick","column","onMouseOver","previewSelection","onMouseOut","removePreview","className","concat","preview","winningMove","GameBoard","gamePieces","game","board","map","i","piece","j","previewCell","row","cellColor","playersMove","players","currentPlayer","GamePiece_GamePiece","key","selectColumn","PlayerInfo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","displayColorPicker","handleClick","state","handleColorChange","handleColorChangeComplete","playerNum","hex","handleNameChange","event","handlePlayerNameChange","target","value","type","name","onChange","playerColor","position","zIndex","opacity","top","right","bottom","left","lib","onChangeComplete","disableAlpha","React","Component","GameInfo","currentGameState","tieGame","winner","playerInfoArray","player","Components_PlayerInfo_PlayerInfo","resetBoard","masterReset","Game","push","winningMoves","rowsLeftInColumn","Array","fill","timeStamp","Date","now","checkForWinner","forEach","move","every","col","updateCurrentPlayer","vertical","horizontal","downRight","downLeft","moves","Connect4","prevState","updateBoard","newColor","newName","GameBoard_GameBoard","GameInfo_GameInfo","App","Components_Connect4_Connect4","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8aece921.chunk.js","sourcesContent":["import React from 'react'\n\nfunction GamePiece(props) {\n\n  let handleClick = () => {\n    props.columnClick(props.column)\n  }\n\n  let handleHover = () => {\n    props.previewSelection(props.column)\n  }\n\n  let handleMouseOut = () => {\n    props.removePreview()\n  }\n\n  return (\n\n    <div\n      style={{backgroundColor: props.color}}\n      onClick={handleClick}\n      onMouseOver={handleHover}\n      onMouseOut={handleMouseOut}\n      className={`game-piece ${props.preview ? 'preview' : ''} ${props.winningMove ? 'winning-move' : ''}`} >\n    </div>\n  )\n}\n\nexport default GamePiece\n","import React from 'react'\n\nimport GamePiece from '../GamePiece/GamePiece'\n\nfunction GameBoard(props) {\n  let gamePieces = props.game.board.map((column, i) => {\n    return column.map((piece, j) => {\n\n      let preview = (props.game.previewCell.row === i && props.game.previewCell.column === j);\n\n      let cellColor = piece.playersMove !== null\n        ? props.game.players[piece.playersMove].color\n        : preview\n          ? props.game.players[props.game.currentPlayer].color\n          : piece.color\n\n      return  (\n        <GamePiece\n          key={`${i}${j}`}\n          column={j}\n          row={i}\n          color={cellColor}\n          columnClick={props.selectColumn}\n          previewSelection={props.previewSelection}\n          removePreview={props.removePreview}\n          preview={preview}\n          winningMove={piece.winningMove}\n        />\n      )\n    })\n  })\n\n  return (\n    <div className=\"game-board\" >\n      {gamePieces}\n    </div>\n  )\n\n}\n\nexport default GameBoard\n\n","import React from 'react'\nimport { ChromePicker } from 'react-color';\n\nclass PlayerInfo extends React.Component {\n  constructor() {\n\n    super()\n\n    this.state = {\n      displayColorPicker: false,\n    };\n\n  }\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  }\n\n  handleColorChange = (color) => {\n    this.props.handleColorChangeComplete(this.props.playerNum, color.hex)\n  }\n\n  handleNameChange = (event) => {\n    this.props.handlePlayerNameChange(this.props.playerNum, event.target.value)\n  }\n\n  render() {\n\n    const popover = {\n      position: 'absolute',\n      zIndex: '100',\n    }\n\n    const cover = {\n      position: 'fixed',\n      opacity: '.5',\n      backgroundColor: 'gray',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n    return (\n      <div className=\"player-info\">\n\n        <ul>\n          <li><p>Name <input type=\"text\" value={this.props.name} onChange={this.handleNameChange} /></p></li>\n          <li>\n            <p>Color</p>\n            <div style={{backgroundColor:this.props.playerColor}} onClick={this.handleClick} className=\"circle\" />\n          </li>\n        </ul>\n\n\n\n        { this.state.displayColorPicker ?\n          <div className=\"popover\" style={ popover }>\n            <div className=\"cover\" style={ cover } onClick={ this.handleClose } />\n            <ChromePicker\n              color={ this.props.playerColor }\n              onChangeComplete={ this.handleColorChange }\n              disableAlpha={true}/>\n          </div>\n          : null }\n      </div>\n    )\n\n  }\n}\n\nexport default PlayerInfo\n","import React from 'react'\n\nimport PlayerInfo from '../PlayerInfo/PlayerInfo';\n\nfunction GameInfo(props) {\n\n  const currentGameState = props.game.tieGame\n    ? `It's a tie`\n    : props.game.winner\n      ? `${props.game.players[props.game.currentPlayer].name} wins!`\n      : `${props.game.players[props.game.currentPlayer].name}'s turn`\n\n  const playerInfoArray = props.game.players.map((player, i) => (\n      <PlayerInfo\n        key={i}\n        playerNum={i}\n        playerColor={player.color}\n        name={player.name}\n        handleColorChangeComplete={props.handleColorChangeComplete}\n        handlePlayerNameChange={props.handlePlayerNameChange}/>\n    )\n  )\n\n\n  return (\n    <div className=\"game-info\">\n      <h1>Connect 4&nbsp;\n        <span style={{color:\"#61DAFB\"}}>React</span>\n      </h1>\n      <h2>{currentGameState}</h2>\n\n      <div className=\"player-info-container\">\n        {playerInfoArray}\n      </div>\n\n      <button onClick={props.resetBoard}>Reset Board</button>\n      <button className=\"master\" onClick={props.masterReset}>Master Reset</button>\n    </div>\n  )\n}\n\nexport default GameInfo\n","class Game {\n\n  constructor(players) {\n\n    this.board = [];\n    for (let i = 0; i < 6; i++) {\n      let column = [];\n      for (let j = 0; j < 7; j++) {\n        column.push({\n          color: '#FFF',\n          row: i,\n          column: j,\n          playersMove: null,\n          winningMove: false,\n        })\n      }\n      this.board.push(column);\n    }\n\n    if (players) {\n      this.players = players\n    } else {\n      this.players = [\n        {\n          name: 'Player 1',\n          color: '#3FDAE0'\n        }, {\n          name: 'Player 2',\n          color: '#F5DB72'\n        }\n      ]\n    }\n\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n    this.winningMoves = null\n    this.currentPlayer = 0;\n    this.winner = false\n    this.tieGame = false\n    this.rowsLeftInColumn = Array(7).fill(5)\n  }\n\n  updateBoard(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n\n    this.board[this.rowsLeftInColumn[column]][column] = {\n      color: this.players[this.currentPlayer].color,\n      playersMove: this.currentPlayer,\n      timeStamp: Date.now(),\n    }\n\n    this.rowsLeftInColumn[column] -= 1;\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    if (this.checkForWinner()) {\n      this.winningMoves.forEach(move => {\n        this.board[move[0]][move[1]].winningMove = true;\n      })\n      return\n    }\n\n    if (this.rowsLeftInColumn.every(col => col === -1)) {\n      this.tieGame = true\n      return\n    }\n    this.updateCurrentPlayer();\n  }\n\n  previewSelection(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n    this.previewCell = {\n      row: this.rowsLeftInColumn[column],\n      column\n    }\n\n\n  }\n\n  updateCurrentPlayer() {\n    this.currentPlayer = this.currentPlayer ? 0 : 1\n  }\n\n  checkForWinner() {\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (this.vertical(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.horizontal(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.downRight(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 3; j < 7; j++) {\n        if (this.downLeft(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n  }\n\n  vertical(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row].playersMove) {\n        return false\n      }\n      moves.push([column + i, row])\n    }\n    this.winningMoves = moves\n    return true\n  }\n\n  horizontal(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column][row + i].playersMove) {\n        return false\n      }\n      moves.push([column, row+i])\n    }\n    this.winningMoves = moves\n    return true\n  }\n\n  downRight(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row + i].playersMove) {\n        return false\n      }\n      moves.push([column+i, row+i])\n    }\n\n    this.winningMoves = moves\n    return true\n  }\n\n  downLeft(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row - i].playersMove) {\n        return false\n      }\n      moves.push([column+i, row-i])\n    }\n    this.winningMoves = moves\n    return true\n  }\n}\n\nexport default Game\n","import React from 'react'\n\nimport GameBoard from '../GameBoard/GameBoard'\nimport GameInfo from '../GameInfo/GameInfo'\nimport Game from '../resources/game';\n\nclass Connect4 extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      game: new Game()\n    }\n  }\n\n  selectColumn = column => {\n\n    // had to use callback function for previewSelection method due to async from setState\n    if (this.state.game.winner || this.state.game.tieGame) return\n    this.setState(prevState => {\n      prevState.game.updateBoard(column);\n      return prevState;\n    }, this.previewSelection(column))\n\n  }\n\n  previewSelection = column => {\n    if (this.state.game.winner || this.state.game.tieGame) {\n     this.removePreview()\n     return\n    }\n    this.setState(prevState => {\n      prevState.game.previewSelection(column);\n      return prevState;\n    })\n  }\n\n  removePreview = () => {\n    this.setState(prevState => {\n      prevState.game.previewCell = {\n        column: null,\n        row: null\n      }\n      return prevState;\n    })\n  }\n\n\n  handleColorChangeComplete = (player, newColor) => {\n    this.setState(prevState => {\n      prevState.game.players[player].color = newColor;\n      return prevState;\n    })\n  }\n\n  handlePlayerNameChange = (player, newName) => {\n    this.setState(prevState => {\n      prevState.game.players[player].name = newName;\n      return prevState\n    })\n  }\n\n  masterReset = () => {\n    this.setState({\n      game: new Game()\n    })\n  }\n\n  resetBoard = () => {\n    this.setState(prevState => {\n      const newGame = new Game(prevState.game.players)\n      return {\n        game: newGame\n      }\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n\n        <GameBoard\n          selectColumn={this.selectColumn}\n          previewSelection={this.previewSelection}\n          removePreview={this.removePreview}\n          game={this.state.game} />\n\n        <GameInfo\n          resetBoard={this.resetBoard}\n          masterReset={this.masterReset}\n          handleColorChangeComplete={this.handleColorChangeComplete}\n          handlePlayerNameChange={this.handlePlayerNameChange}\n          game={this.state.game} />\n\n      </div>\n    )\n  }\n}\n\nexport default Connect4\n\n","import React, { Component } from 'react';\n\nimport Connect4 from './Components/Connect4/Connect4';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Connect4 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}