{"version":3,"sources":["Components/GamePiece/GamePiece.js","Components/GameBoard/GameBoard.js","Components/PlayerInfo/PlayerInfo.js","Components/GameInfo/GameInfo.js","Components/resources/game.js","Components/Connect4/Connect4.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","style","backgroundColor","color","onClick","columnClick","column","onMouseOver","previewSelection","className","concat","preview","GameBoard","gamePieces","game","board","map","i","piece","j","previewCell","row","console","log","Date","now","cellColor","playersMove","players","currentPlayer","GamePiece_GamePiece","key","selectColumn","PlayerInfo","name","changePlayerColor","playerNum","newColor","GameInfo","currentGameState","winner","PlayerInfo_PlayerInfo","restartGame","Game","Object","classCallCheck","this","push","rowsLeftInColumn","Array","fill","timeStamp","checkForWinner","updateCurrentPlayer","vertical","horizontal","downRight","downLeft","Connect4","_this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","handleChangeComplete","updateBoard","setState","prevState","hex","player","arguments","length","undefined","lib","onChangeComplete","GameBoard_GameBoard","GameInfo_GameInfo","React","Component","App","Components_Connect4_Connect4","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6ab0bc5b.chunk.js","sourcesContent":["import React from 'react'\n\nfunction GamePiece(props) {\n\n  let handleClick = () => {\n    props.columnClick(props.column)\n  }\n\n  let handleHover = () => {\n    props.previewSelection(props.column)\n  }\n\n  return (\n\n    <div\n      style={{backgroundColor: props.color}}\n      onClick={handleClick}\n      onMouseOver={handleHover}\n      className={`game-piece ${props.preview && 'preview'}`} >\n    </div>\n  )\n}\n\nexport default GamePiece\n","import React from 'react'\n\nimport GamePiece from '../GamePiece/GamePiece'\n\nfunction GameBoard(props) {\n  let gamePieces = props.game.board.map((column, i) => {\n    return column.map((piece, j) => {\n\n      let preview = (props.game.previewCell.row === i && props.game.previewCell.column === j);\n      console.log(piece, Date.now())\n      let cellColor = piece.playersMove !== null\n        ? props.game.players[piece.playersMove].color\n        : preview\n          ? props.game.players[props.game.currentPlayer].color\n          : piece.color\n\n      return  (\n        <GamePiece\n          key={`${i}${j}`}\n          column={j}\n          row={i}\n          color={cellColor}\n          columnClick={props.selectColumn}\n          previewSelection={props.previewSelection}\n          preview={preview}\n        />\n      )\n    })\n  })\n\n  return (\n    <div className=\"game-board\" >\n      {gamePieces}\n    </div>\n  )\n\n}\n\nexport default GameBoard\n\n","import React from 'react'\n\nfunction PlayerInfo(props) {\n\n  let handleClick = () => {\n    props.changePlayerColor(props.playerNum, props.newColor)\n  }\n\n  // let handleHover = () => {\n  //   props.previewSelection(props.column)\n  // }\n\n  return (\n    <div className=\"player-info\">\n      <p>{props.name}</p>\n      <div style={{backgroundColor:props.color}} onClick={handleClick} className=\"circle\"></div>\n    </div>\n  )\n}\n\nexport default PlayerInfo\n","import React from 'react'\n\nimport PlayerInfo from '../PlayerInfo/PlayerInfo';\n\nfunction GameInfo(props) {\n\n  let currentGameState = props.game.winner\n    ? `Player ${props.game.currentPlayer + 1} wins!`\n    : `Player ${props.game.currentPlayer + 1}'s turn`\n\n  return (\n    <div className=\"game-info\">\n      <h1>Connect 4&nbsp;\n        <span style={{color:\"#61DAFB\"}}>React</span>\n      </h1>\n      <h2>{currentGameState}</h2>\n\n      <PlayerInfo\n        playerNum={0}\n        newColor=\"blue\"\n        color={props.game.players[0].color}\n        name={props.game.players[0].name}\n        changePlayerColor={props.changePlayerColor}/>\n\n      <PlayerInfo\n        playerNum={1}\n        newColor=\"purple\"\n        color={props.game.players[1].color}\n        name={props.game.players[1].name}\n        changePlayerColor={props.changePlayerColor}/>\n\n      <button onClick={props.restartGame}>Reset</button>\n    </div>\n  )\n}\n\nexport default GameInfo\n","class Game {\n\n  constructor() {\n\n    this.board = [];\n    for (let i = 0; i < 6; i++) {\n      let column = [];\n      for (let j = 0; j < 7; j++) {\n        column.push({\n          color: '#FFF',\n          row: i,\n          column: j,\n          playersMove: null,\n        })\n      }\n      this.board.push(column);\n    }\n\n    this.players = [\n      {\n        name: 'Player 1',\n        color: '#D55A49'\n      }, {\n        name: 'Player 2',\n        color: '#CFB961'\n      }\n    ]\n\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    this.currentPlayer = 0;\n    this.winner = false\n    this.rowsLeftInColumn = Array(7).fill(5)\n  }\n\n  updateBoard(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n\n    this.board[this.rowsLeftInColumn[column]][column] = {\n      color: this.players[this.currentPlayer].color,\n      playersMove: this.currentPlayer,\n      timeStamp: Date.now(),\n    }\n\n    this.rowsLeftInColumn[column] -= 1;\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    if (this.checkForWinner()) return\n    this.updateCurrentPlayer();\n  }\n\n  previewSelection(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n    this.previewCell = {\n      row: this.rowsLeftInColumn[column],\n      column\n    }\n\n\n  }\n\n  updateCurrentPlayer() {\n    this.currentPlayer = this.currentPlayer ? 0 : 1\n  }\n\n  checkForWinner() {\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (this.vertical(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.horizontal(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.downRight(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 3; j < 7; j++) {\n        if (this.downLeft(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n  }\n\n  vertical(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n\n  horizontal(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downRight(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downLeft(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row - i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n}\n\nexport default Game\n","import React from 'react'\n\nimport GameBoard from '../GameBoard/GameBoard'\nimport GameInfo from '../GameInfo/GameInfo'\nimport Game from '../resources/game';\nimport { TwitterPicker } from 'react-color';\n\n\nclass Connect4 extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      game: new Game()\n    }\n\n    this.selectColumn = this.selectColumn.bind(this)\n    this.previewSelection = this.previewSelection.bind(this)\n    this.changePlayerColor = this.changePlayerColor.bind(this)\n    this.handleChangeComplete = this.handleChangeComplete.bind(this)\n    this.restartGame = this.restartGame.bind(this)\n  }\n\n  selectColumn(column) {\n\n    if (this.state.game.winner) return\n\n    this.state.game.updateBoard(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n\n    this.previewSelection(column)\n\n  }\n\n  previewSelection(column) {\n    if (this.state.game.winner) return\n    this.state.game.previewSelection(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n  }\n\n  handleChangeComplete(color) {\n    this.setState(prevState => {\n      prevState.game.players[0].color = color.hex;\n      return prevState;\n    })\n  }\n\n  changePlayerColor(player, color = 'green') {\n    this.setState(prevState => {\n      prevState.game.players[player].color = color;\n      return prevState;\n    })\n  }\n\n  restartGame() {\n    this.setState({\n      game: new Game()\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <TwitterPicker\n          color={ this.state.game.players[0].color }\n          onChangeComplete={ this.handleChangeComplete }/>\n        <GameBoard\n          selectColumn={this.selectColumn}\n          previewSelection={this.previewSelection}\n          game={this.state.game}\n        />\n        <GameInfo\n          restartGame={this.restartGame}\n          changePlayerColor={this.changePlayerColor}\n          game={this.state.game}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Connect4\n\n","import React, { Component } from 'react';\n\nimport Connect4 from './Components/Connect4/Connect4';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Connect4 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}