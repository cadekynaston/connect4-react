{"version":3,"sources":["Components/GamePiece/GamePiece.js","Components/GameBoard/GameBoard.js","Components/PlayerInfo/PlayerInfo.js","Components/GameInfo/GameInfo.js","Components/resources/game.js","Components/Connect4/Connect4.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","style","backgroundColor","color","onClick","columnClick","column","onMouseOver","previewSelection","className","concat","preview","winningMove","GameBoard","gamePieces","game","board","map","i","piece","j","previewCell","row","cellColor","playersMove","players","currentPlayer","GamePiece_GamePiece","key","selectColumn","PlayerInfo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","displayColorPicker","handleClick","state","handleColorChange","handleColorChangeComplete","playerNum","hex","handleNameChange","event","handlePlayerNameChange","target","value","type","name","onChange","playerColor","position","zIndex","opacity","top","right","bottom","left","lib","onChangeComplete","disableAlpha","React","Component","GameInfo","currentGameState","tieGame","winner","Components_PlayerInfo_PlayerInfo","restartGame","Game","push","winningMoves","rowsLeftInColumn","Array","fill","timeStamp","Date","now","checkForWinner","forEach","move","every","col","updateCurrentPlayer","vertical","horizontal","downRight","downLeft","moves","Connect4","bind","assertThisInitialized","updateBoard","prevState","player","newColor","newName","GameBoard_GameBoard","GameInfo_GameInfo","App","Components_Connect4_Connect4","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mNAuBeA,MArBf,SAAmBC,GAUjB,OAEEC,EAAAC,EAAAC,cAAA,OACEC,MAAO,CAACC,gBAAiBL,EAAMM,OAC/BC,QAZc,WAChBP,EAAMQ,YAAYR,EAAMS,SAYtBC,YATc,WAChBV,EAAMW,iBAAiBX,EAAMS,SAS3BG,UAAS,cAAAC,OAAgBb,EAAMc,QAAU,UAAY,GAA5C,KAAAD,OAAkDb,EAAMe,YAAc,eAAiB,OCqBvFC,MAnCf,SAAmBhB,GACjB,IAAIiB,EAAajB,EAAMkB,KAAKC,MAAMC,IAAI,SAACX,EAAQY,GAC7C,OAAOZ,EAAOW,IAAI,SAACE,EAAOC,GAExB,IAAIT,EAAWd,EAAMkB,KAAKM,YAAYC,MAAQJ,GAAKrB,EAAMkB,KAAKM,YAAYf,SAAWc,EAEjFG,EAAkC,OAAtBJ,EAAMK,YAClB3B,EAAMkB,KAAKU,QAAQN,EAAMK,aAAarB,MACtCQ,EACEd,EAAMkB,KAAKU,QAAQ5B,EAAMkB,KAAKW,eAAevB,MAC7CgB,EAAMhB,MAEZ,OACEL,EAAAC,EAAAC,cAAC2B,EAAD,CACEC,IAAG,GAAAlB,OAAKQ,GAALR,OAASU,GACZd,OAAQc,EACRE,IAAKJ,EACLf,MAAOoB,EACPlB,YAAaR,EAAMgC,aACnBrB,iBAAkBX,EAAMW,iBACxBG,QAASA,EACTC,YAAaO,EAAMP,kBAM3B,OACEd,EAAAC,EAAAC,cAAA,OAAKS,UAAU,cACZK,YCmDQgB,cAhFb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAEZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAWFI,YAAc,WACZP,EAAKQ,SAAS,CAAEC,oBAAoB,KAdxBT,EAiBdU,YAAc,WACZV,EAAKQ,SAAS,CAAEC,oBAAqBT,EAAKW,MAAMF,sBAlBpCT,EAqBdY,kBAAoB,SAACxC,GACnB4B,EAAKlC,MAAM+C,0BAA0Bb,EAAKlC,MAAMgD,UAAW1C,EAAM2C,MAtBrDf,EAyBdgB,iBAAmB,SAACC,GAClBjB,EAAKlC,MAAMoD,uBAAuBlB,EAAKlC,MAAMgD,UAAWG,EAAME,OAAOC,QAtBrEpB,EAAKW,MAAQ,CACXF,oBAAoB,GALVT,wEAoDZ,OACEjC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eAEbX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,SAAOoD,KAAK,OAAOD,MAAOjB,KAAKrC,MAAMwD,KAAMC,SAAUpB,KAAKa,qBACvEjD,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,gBAAgBgC,KAAKrC,MAAM0D,aAAcnD,QAAS8B,KAAKO,YAAahC,UAAU,aAM7FyB,KAAKQ,MAAMF,mBACX1C,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UAAUR,MA7Bf,CACduD,SAAU,WACVC,OAAQ,QA4BF3D,EAAAC,EAAAC,cAAA,OAAKS,UAAU,QAAQR,MAzBjB,CACZuD,SAAU,QACVE,QAAS,KACTxD,gBAAiB,OACjByD,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,OAkBuC1D,QAAU8B,KAAKI,cACtDxC,EAAAC,EAAAC,cAAC+D,EAAA,aAAD,CACE5D,MAAQ+B,KAAKrC,MAAM0D,YACnBS,iBAAmB9B,KAAKS,kBACxBsB,cAAc,KAEhB,aA1EaC,IAAMC,WCsChBC,MArCf,SAAkBvE,GAEhB,IAAIwE,EAAmBxE,EAAMkB,KAAKuD,QAAX,aAEnBzE,EAAMkB,KAAKwD,OAAX,GAAA7D,OACKb,EAAMkB,KAAKU,QAAQ5B,EAAMkB,KAAKW,eAAe2B,KADlD,aAAA3C,OAEKb,EAAMkB,KAAKU,QAAQ5B,EAAMkB,KAAKW,eAAe2B,KAFlD,WAIJ,OACEvD,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aACbX,EAAAC,EAAAC,cAAA,0BACEF,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAACE,MAAM,YAApB,UAEFL,EAAAC,EAAAC,cAAA,UAAKqE,GAELvE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,yBACfX,EAAAC,EAAAC,cAACwE,EAAD,CACE3B,UAAW,EACXU,YAAa1D,EAAMkB,KAAKU,QAAQ,GAAGtB,MACnCkD,KAAMxD,EAAMkB,KAAKU,QAAQ,GAAG4B,KAC5BT,0BAA2B/C,EAAM+C,0BACjCK,uBAAwBpD,EAAMoD,yBAEhCnD,EAAAC,EAAAC,cAACwE,EAAD,CACE3B,UAAW,EACXU,YAAa1D,EAAMkB,KAAKU,QAAQ,GAAGtB,MACnCkD,KAAMxD,EAAMkB,KAAKU,QAAQ,GAAG4B,KAC5BT,0BAA2B/C,EAAM+C,0BACjCK,uBAAwBpD,EAAMoD,0BAIhCnD,EAAAC,EAAAC,cAAA,UAAQI,QAASP,EAAM4E,aAAvB,WC6ISC,aA/Kb,SAAAA,IAAe1C,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAEbxC,KAAKlB,MAAQ,GACb,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAIZ,EAAS,GACJc,EAAI,EAAGA,EAAI,EAAGA,IACrBd,EAAOqE,KAAK,CACVxE,MAAO,OACPmB,IAAKJ,EACLZ,OAAQc,EACRI,YAAa,KACbZ,aAAa,IAGjBsB,KAAKlB,MAAM2D,KAAKrE,GAGlB4B,KAAKT,QAAU,CACb,CACE4B,KAAM,WACNlD,MAAO,WACN,CACDkD,KAAM,WACNlD,MAAO,YAIX+B,KAAKb,YAAc,CACjBf,OAAQ,KACRgB,IAAK,MAEPY,KAAK0C,aAAe,KACpB1C,KAAKR,cAAgB,EACrBQ,KAAKqC,QAAS,EACdrC,KAAKoC,SAAU,EACfpC,KAAK2C,iBAAmBC,MAAM,GAAGC,KAAK,2DAG5BzE,GAAQ,IAAAyB,EAAAG,MAEqB,IAAnCA,KAAK2C,iBAAiBvE,KAE1B4B,KAAKlB,MAAMkB,KAAK2C,iBAAiBvE,IAASA,GAAU,CAClDH,MAAO+B,KAAKT,QAAQS,KAAKR,eAAevB,MACxCqB,YAAaU,KAAKR,cAClBsD,UAAWC,KAAKC,OAGlBhD,KAAK2C,iBAAiBvE,IAAW,EACjC4B,KAAKb,YAAc,CACjBf,OAAQ,KACRgB,IAAK,MAGHY,KAAKiD,iBACPjD,KAAK0C,aAAaQ,QAAQ,SAAAC,GACxBtD,EAAKf,MAAMqE,EAAK,IAAIA,EAAK,IAAIzE,aAAc,IAK3CsB,KAAK2C,iBAAiBS,MAAM,SAAAC,GAAG,OAAa,IAATA,IACrCrD,KAAKoC,SAAU,EAGjBpC,KAAKsD,gEAGUlF,IAEwB,IAAnC4B,KAAK2C,iBAAiBvE,KAC1B4B,KAAKb,YAAc,CACjBC,IAAKY,KAAK2C,iBAAiBvE,GAC3BA,yDAOF4B,KAAKR,cAAgBQ,KAAKR,cAAgB,EAAI,2CAK9C,IAAK,IAAIR,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIc,KAAKuD,SAASvE,EAAGE,GAEnB,OADAc,KAAKqC,QAAS,GACP,EAKb,IAAK,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIc,KAAKwD,WAAWxE,EAAGE,GAErB,OADAc,KAAKqC,QAAS,GACP,EAKb,IAAK,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIc,KAAKyD,UAAUzE,EAAGE,GAEpB,OADAc,KAAKqC,QAAS,GACP,EAKb,IAAK,IAAIrD,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIc,KAAK0D,SAAS1E,EAAGE,GAEnB,OADAc,KAAKqC,QAAS,GACP,mCAONjE,EAAQgB,GAEf,IADA,IAAIuE,EAAQ,CAAC,CAACvF,EAAQgB,IACdJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,GAA4C,OAAxCgB,KAAKlB,MAAMV,GAAQgB,GAAKE,aAAwBU,KAAKlB,MAAMV,GAAQgB,GAAKE,cAAgBU,KAAKlB,MAAMV,EAASY,GAAGI,GAAKE,YACtH,OAAO,EAETqE,EAAMlB,KAAK,CAACrE,EAASY,EAAGI,IAG1B,OADAY,KAAK0C,aAAeiB,GACb,qCAIEvF,EAAQgB,GAEjB,IADA,IAAIuE,EAAQ,CAAC,CAACvF,EAAQgB,IACdJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,GAA4C,OAAxCgB,KAAKlB,MAAMV,GAAQgB,GAAKE,aAAwBU,KAAKlB,MAAMV,GAAQgB,GAAKE,cAAgBU,KAAKlB,MAAMV,GAAQgB,EAAMJ,GAAGM,YACtH,OAAO,EAETqE,EAAMlB,KAAK,CAACrE,EAAQgB,EAAIJ,IAG1B,OADAgB,KAAK0C,aAAeiB,GACb,oCAGCvF,EAAQgB,GAEhB,IADA,IAAIuE,EAAQ,CAAC,CAACvF,EAAQgB,IACdJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,GAA4C,OAAxCgB,KAAKlB,MAAMV,GAAQgB,GAAKE,aAAwBU,KAAKlB,MAAMV,GAAQgB,GAAKE,cAAgBU,KAAKlB,MAAMV,EAASY,GAAGI,EAAMJ,GAAGM,YAC1H,OAAO,EAETqE,EAAMlB,KAAK,CAACrE,EAAOY,EAAGI,EAAIJ,IAI5B,OADAgB,KAAK0C,aAAeiB,GACb,mCAGAvF,EAAQgB,GAEf,IADA,IAAIuE,EAAQ,CAAC,CAACvF,EAAQgB,IACdJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACzB,GAA4C,OAAxCgB,KAAKlB,MAAMV,GAAQgB,GAAKE,aAAwBU,KAAKlB,MAAMV,GAAQgB,GAAKE,cAAgBU,KAAKlB,MAAMV,EAASY,GAAGI,EAAMJ,GAAGM,YAC1H,OAAO,EAETqE,EAAMlB,KAAK,CAACrE,EAAOY,EAAGI,EAAIJ,IAG5B,OADAgB,KAAK0C,aAAeiB,GACb,WC3FIC,cAzEb,SAAAA,IAAc,IAAA/D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4D,IACZ/D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8D,GAAAzD,KAAAH,QAEKQ,MAAQ,CACX3B,KAAM,IAAI2D,GAGZ3C,EAAKF,aAAeE,EAAKF,aAAakE,KAAlB/D,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,KACpBA,EAAKvB,iBAAmBuB,EAAKvB,iBAAiBuF,KAAtB/D,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,KACxBA,EAAKa,0BAA4Bb,EAAKa,0BAA0BmD,KAA/B/D,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,KACjCA,EAAKkB,uBAAyBlB,EAAKkB,uBAAuB8C,KAA5B/D,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,KAC9BA,EAAK0C,YAAc1C,EAAK0C,YAAYsB,KAAjB/D,OAAAgE,EAAA,EAAAhE,QAAAgE,EAAA,EAAAhE,CAAAD,KAXPA,4EAcDzB,GACP4B,KAAKQ,MAAM3B,KAAKwD,QAAUrC,KAAKQ,MAAM3B,KAAKuD,UAC9CpC,KAAKQ,MAAM3B,KAAKkF,YAAY3F,GAC5B4B,KAAKK,SAAS,SAAA2D,GACZ,OAAOA,IAEThE,KAAK1B,iBAAiBF,6CAGPA,GACX4B,KAAKQ,MAAM3B,KAAKwD,SACpBrC,KAAKQ,MAAM3B,KAAKP,iBAAiBF,GACjC4B,KAAKK,SAAS,SAAA2D,GACZ,OAAOA,uDAIeC,EAAQC,GAChClE,KAAKK,SAAS,SAAA2D,GAEZ,OADAA,EAAUnF,KAAKU,QAAQ0E,GAAQhG,MAAQiG,EAChCF,mDAIYC,EAAQE,GAC7BnE,KAAKK,SAAS,SAAA2D,GAEZ,OADAA,EAAUnF,KAAKU,QAAQ0E,GAAQ9C,KAAOgD,EAC/BH,0CAKThE,KAAKK,SAAS,CACZxB,KAAM,IAAI2D,qCAMZ,OACE5E,EAAAC,EAAAC,cAAA,OAAKS,UAAU,aAEbX,EAAAC,EAAAC,cAACsG,EAAD,CACEzE,aAAcK,KAAKL,aACnBrB,iBAAkB0B,KAAK1B,iBACvBO,KAAMmB,KAAKQ,MAAM3B,OAEnBjB,EAAAC,EAAAC,cAACuG,EAAD,CACE9B,YAAavC,KAAKuC,YAClB7B,0BAA2BV,KAAKU,0BAChCK,uBAAwBf,KAAKe,uBAC7BlC,KAAMmB,KAAKQ,MAAM3B,eAnEJmD,IAAMC,WCSdqC,2LARX,OACE1G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAACyG,EAAD,cAJUtC,cCAlBuC,IAASC,OAAO7G,EAAAC,EAAAC,cAAC4G,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3f1613af.chunk.js","sourcesContent":["import React from 'react'\n\nfunction GamePiece(props) {\n\n  let handleClick = () => {\n    props.columnClick(props.column)\n  }\n\n  let handleHover = () => {\n    props.previewSelection(props.column)\n  }\n\n  return (\n\n    <div\n      style={{backgroundColor: props.color}}\n      onClick={handleClick}\n      onMouseOver={handleHover}\n      className={`game-piece ${props.preview ? 'preview' : ''} ${props.winningMove ? 'winning-move' : ''}`} >\n    </div>\n  )\n}\n\nexport default GamePiece\n","import React from 'react'\n\nimport GamePiece from '../GamePiece/GamePiece'\n\nfunction GameBoard(props) {\n  let gamePieces = props.game.board.map((column, i) => {\n    return column.map((piece, j) => {\n\n      let preview = (props.game.previewCell.row === i && props.game.previewCell.column === j);\n\n      let cellColor = piece.playersMove !== null\n        ? props.game.players[piece.playersMove].color\n        : preview\n          ? props.game.players[props.game.currentPlayer].color\n          : piece.color\n\n      return  (\n        <GamePiece\n          key={`${i}${j}`}\n          column={j}\n          row={i}\n          color={cellColor}\n          columnClick={props.selectColumn}\n          previewSelection={props.previewSelection}\n          preview={preview}\n          winningMove={piece.winningMove}\n        />\n      )\n    })\n  })\n\n  return (\n    <div className=\"game-board\" >\n      {gamePieces}\n    </div>\n  )\n\n}\n\nexport default GameBoard\n\n","import React from 'react'\nimport { ChromePicker } from 'react-color';\n\nclass PlayerInfo extends React.Component {\n  constructor() {\n\n    super()\n\n    this.state = {\n      displayColorPicker: false,\n    };\n\n    // this.handleClose = this.handleClose.bind(this)\n    // this.handleClick = this.handleClick.bind(this)\n    // this.handleNameChange = this.handleNameChange.bind(this)\n  }\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  }\n\n  handleColorChange = (color) => {\n    this.props.handleColorChangeComplete(this.props.playerNum, color.hex)\n  }\n\n  handleNameChange = (event) => {\n    this.props.handlePlayerNameChange(this.props.playerNum, event.target.value)\n  }\n\n\n  // let handleHover = () => {\n  //   this.props.previewSelection(this.props.column)\n  // }\n\n\n  render() {\n\n    const popover = {\n      position: 'absolute',\n      zIndex: '100',\n    }\n\n    const cover = {\n      position: 'fixed',\n      opacity: '.5',\n      backgroundColor: 'gray',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n    return (\n      <div className=\"player-info\">\n\n        <ul>\n          <li><p>Name: <input type=\"text\" value={this.props.name} onChange={this.handleNameChange} /></p></li>\n          <li>\n            <p>Color:</p>\n            <div style={{backgroundColor:this.props.playerColor}} onClick={this.handleClick} className=\"circle\" />\n          </li>\n        </ul>\n\n\n\n        { this.state.displayColorPicker ?\n          <div className=\"popover\" style={ popover }>\n            <div className=\"cover\" style={ cover } onClick={ this.handleClose } />\n            <ChromePicker\n              color={ this.props.playerColor }\n              onChangeComplete={ this.handleColorChange }\n              disableAlpha={true}/>\n          </div>\n          : null }\n      </div>\n    )\n\n  }\n}\n\nexport default PlayerInfo\n","import React from 'react'\n\nimport PlayerInfo from '../PlayerInfo/PlayerInfo';\n\nfunction GameInfo(props) {\n\n  let currentGameState = props.game.tieGame\n    ? `It's a tie`\n    : props.game.winner\n      ? `${props.game.players[props.game.currentPlayer].name} wins!`\n      : `${props.game.players[props.game.currentPlayer].name}'s turn`\n\n  return (\n    <div className=\"game-info\">\n      <h1>Connect 4&nbsp;\n        <span style={{color:\"#61DAFB\"}}>React</span>\n      </h1>\n      <h2>{currentGameState}</h2>\n\n      <div className=\"player-info-container\">\n      <PlayerInfo\n        playerNum={0}\n        playerColor={props.game.players[0].color}\n        name={props.game.players[0].name}\n        handleColorChangeComplete={props.handleColorChangeComplete}\n        handlePlayerNameChange={props.handlePlayerNameChange}/>\n\n      <PlayerInfo\n        playerNum={1}\n        playerColor={props.game.players[1].color}\n        name={props.game.players[1].name}\n        handleColorChangeComplete={props.handleColorChangeComplete}\n        handlePlayerNameChange={props.handlePlayerNameChange}/>\n\n      </div>\n\n      <button onClick={props.restartGame}>Reset</button>\n    </div>\n  )\n}\n\nexport default GameInfo\n","class Game {\n\n  constructor() {\n\n    this.board = [];\n    for (let i = 0; i < 6; i++) {\n      let column = [];\n      for (let j = 0; j < 7; j++) {\n        column.push({\n          color: '#FFF',\n          row: i,\n          column: j,\n          playersMove: null,\n          winningMove: false,\n        })\n      }\n      this.board.push(column);\n    }\n\n    this.players = [\n      {\n        name: 'Player 1',\n        color: '#E0523F'\n      }, {\n        name: 'Player 2',\n        color: '#F5DB72'\n      }\n    ]\n\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n    this.winningMoves = null\n    this.currentPlayer = 0;\n    this.winner = false\n    this.tieGame = false\n    this.rowsLeftInColumn = Array(7).fill(5)\n  }\n\n  updateBoard(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n\n    this.board[this.rowsLeftInColumn[column]][column] = {\n      color: this.players[this.currentPlayer].color,\n      playersMove: this.currentPlayer,\n      timeStamp: Date.now(),\n    }\n\n    this.rowsLeftInColumn[column] -= 1;\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    if (this.checkForWinner()) {\n      this.winningMoves.forEach(move => {\n        this.board[move[0]][move[1]].winningMove = true;\n      })\n      return\n    }\n\n    if (this.rowsLeftInColumn.every(col => col === -1)) {\n      this.tieGame = true\n      return\n    }\n    this.updateCurrentPlayer();\n  }\n\n  previewSelection(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n    this.previewCell = {\n      row: this.rowsLeftInColumn[column],\n      column\n    }\n\n\n  }\n\n  updateCurrentPlayer() {\n    this.currentPlayer = this.currentPlayer ? 0 : 1\n  }\n\n  checkForWinner() {\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (this.vertical(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.horizontal(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.downRight(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 3; j < 7; j++) {\n        if (this.downLeft(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n  }\n\n  vertical(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row].playersMove) {\n        return false\n      }\n      moves.push([column + i, row])\n    }\n    this.winningMoves = moves\n    return true\n  }\n\n\n  horizontal(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column][row + i].playersMove) {\n        return false\n      }\n      moves.push([column, row+i])\n    }\n    this.winningMoves = moves\n    return true\n  }\n\n  downRight(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row + i].playersMove) {\n        return false\n      }\n      moves.push([column+i, row+i])\n    }\n\n    this.winningMoves = moves\n    return true\n  }\n\n  downLeft(column, row) {\n    let moves = [[column, row]];\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row - i].playersMove) {\n        return false\n      }\n      moves.push([column+i, row-i])\n    }\n    this.winningMoves = moves\n    return true\n  }\n\n}\n\nexport default Game\n","import React from 'react'\n\nimport GameBoard from '../GameBoard/GameBoard'\nimport GameInfo from '../GameInfo/GameInfo'\nimport Game from '../resources/game';\n\nclass Connect4 extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      game: new Game()\n    }\n\n    this.selectColumn = this.selectColumn.bind(this)\n    this.previewSelection = this.previewSelection.bind(this)\n    this.handleColorChangeComplete = this.handleColorChangeComplete.bind(this)\n    this.handlePlayerNameChange = this.handlePlayerNameChange.bind(this)\n    this.restartGame = this.restartGame.bind(this)\n  }\n\n  selectColumn(column) {\n    if (this.state.game.winner || this.state.game.tieGame) return\n    this.state.game.updateBoard(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n    this.previewSelection(column)\n  }\n\n  previewSelection(column) {\n    if (this.state.game.winner) return\n    this.state.game.previewSelection(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n  }\n\n  handleColorChangeComplete(player, newColor) {\n    this.setState(prevState => {\n      prevState.game.players[player].color = newColor;\n      return prevState;\n    })\n  }\n\n  handlePlayerNameChange(player, newName) {\n    this.setState(prevState => {\n      prevState.game.players[player].name = newName;\n      return prevState\n    })\n  }\n\n  restartGame() {\n    this.setState({\n      game: new Game()\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n\n        <GameBoard\n          selectColumn={this.selectColumn}\n          previewSelection={this.previewSelection}\n          game={this.state.game}\n        />\n        <GameInfo\n          restartGame={this.restartGame}\n          handleColorChangeComplete={this.handleColorChangeComplete}\n          handlePlayerNameChange={this.handlePlayerNameChange}\n          game={this.state.game}\n        />\n\n      </div>\n    )\n  }\n}\n\nexport default Connect4\n\n","import React, { Component } from 'react';\n\nimport Connect4 from './Components/Connect4/Connect4';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Connect4 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}