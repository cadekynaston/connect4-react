{"version":3,"sources":["Components/GamePiece/GamePiece.js","Components/GameBoard/GameBoard.js","Components/PlayerInfo/PlayerInfo.js","Components/GameInfo/GameInfo.js","Components/resources/game.js","Components/Connect4/Connect4.js","App.js","index.js"],"names":["GamePiece","props","react_default","a","createElement","style","backgroundColor","color","onClick","columnClick","column","onMouseOver","previewSelection","className","concat","preview","GameBoard","gamePieces","game","board","map","i","piece","j","previewCell","row","cellColor","playersMove","players","currentPlayer","GamePiece_GamePiece","key","selectColumn","PlayerInfo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","setState","displayColorPicker","handleClick","state","handleColorChange","handleColorChangeComplete","playerNum","hex","bind","assertThisInitialized","name","playerColor","position","zIndex","opacity","top","right","bottom","left","lib","onChangeComplete","disableAlpha","React","Component","GameInfo","currentGameState","winner","Components_PlayerInfo_PlayerInfo","restartGame","Game","push","rowsLeftInColumn","Array","fill","timeStamp","Date","now","checkForWinner","updateCurrentPlayer","vertical","horizontal","downRight","downLeft","Connect4","changePlayerColor","updateBoard","prevState","player","newColor","arguments","length","undefined","GameBoard_GameBoard","GameInfo_GameInfo","App","Components_Connect4_Connect4","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.985c0f71.chunk.js","sourcesContent":["import React from 'react'\n\nfunction GamePiece(props) {\n\n  let handleClick = () => {\n    props.columnClick(props.column)\n  }\n\n  let handleHover = () => {\n    props.previewSelection(props.column)\n  }\n\n  return (\n\n    <div\n      style={{backgroundColor: props.color}}\n      onClick={handleClick}\n      onMouseOver={handleHover}\n      className={`game-piece ${props.preview && 'preview'}`} >\n    </div>\n  )\n}\n\nexport default GamePiece\n","import React from 'react'\n\nimport GamePiece from '../GamePiece/GamePiece'\n\nfunction GameBoard(props) {\n  let gamePieces = props.game.board.map((column, i) => {\n    return column.map((piece, j) => {\n\n      let preview = (props.game.previewCell.row === i && props.game.previewCell.column === j);\n\n      let cellColor = piece.playersMove !== null\n        ? props.game.players[piece.playersMove].color\n        : preview\n          ? props.game.players[props.game.currentPlayer].color\n          : piece.color\n\n      return  (\n        <GamePiece\n          key={`${i}${j}`}\n          column={j}\n          row={i}\n          color={cellColor}\n          columnClick={props.selectColumn}\n          previewSelection={props.previewSelection}\n          preview={preview}\n        />\n      )\n    })\n  })\n\n  return (\n    <div className=\"game-board\" >\n      {gamePieces}\n    </div>\n  )\n\n}\n\nexport default GameBoard\n\n","import React from 'react'\n\nimport { ChromePicker } from 'react-color';\n\n\nclass PlayerInfo extends React.Component {\n  constructor() {\n\n    super()\n\n    this.state = {\n      displayColorPicker: false,\n    };\n\n    this.handleClose = this.handleClose.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  }\n\n  handleColorChange = (color) => {\n    this.props.handleColorChangeComplete(this.props.playerNum, color.hex)\n  }\n\n\n  // let handleHover = () => {\n  //   this.props.previewSelection(this.props.column)\n  // }\n\n\n  render() {\n\n    const popover = {\n      position: 'absolute',\n      zIndex: '100',\n    }\n\n    const cover = {\n      position: 'fixed',\n      opacity: '.5',\n      backgroundColor: 'gray',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n\n    return (\n      <div className=\"player-info\">\n        <p>{this.props.name}</p>\n        <div style={{backgroundColor:this.props.playerColor}} onClick={this.handleClick} className=\"circle\"></div>\n        { this.state.displayColorPicker ?\n          <div className=\"popover\" style={ popover }>\n            <div className=\"cover\" style={ cover } onClick={ this.handleClose } />\n            <ChromePicker\n              color={ this.props.playerColor }\n              onChangeComplete={ this.handleColorChange }\n              disableAlpha={true}/>\n          </div>\n          : null }\n      </div>\n    )\n\n  }\n}\n\nexport default PlayerInfo\n","import React from 'react'\n\nimport PlayerInfo from '../PlayerInfo/PlayerInfo';\n\nfunction GameInfo(props) {\n\n  let currentGameState = props.game.winner\n    ? `Player ${props.game.currentPlayer + 1} wins!`\n    : `Player ${props.game.currentPlayer + 1}'s turn`\n\n  return (\n    <div className=\"game-info\">\n      <h1>Connect 4&nbsp;\n        <span style={{color:\"#61DAFB\"}}>React</span>\n      </h1>\n      <h2>{currentGameState}</h2>\n\n      <PlayerInfo\n        playerNum={0}\n        playerColor={props.game.players[0].color}\n        name={props.game.players[0].name}\n        handleColorChangeComplete={props.handleColorChangeComplete}/>\n\n      <PlayerInfo\n        playerNum={1}\n        playerColor={props.game.players[1].color}\n        name={props.game.players[1].name}\n        handleColorChangeComplete={props.handleColorChangeComplete}/>\n\n      <button onClick={props.restartGame}>Reset</button>\n    </div>\n  )\n}\n\nexport default GameInfo\n","class Game {\n\n  constructor() {\n\n    this.board = [];\n    for (let i = 0; i < 6; i++) {\n      let column = [];\n      for (let j = 0; j < 7; j++) {\n        column.push({\n          color: '#FFF',\n          row: i,\n          column: j,\n          playersMove: null,\n        })\n      }\n      this.board.push(column);\n    }\n\n    this.players = [\n      {\n        name: 'Player 1',\n        color: '#D55A49'\n      }, {\n        name: 'Player 2',\n        color: '#CFB961'\n      }\n    ]\n\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    this.currentPlayer = 0;\n    this.winner = false\n    this.rowsLeftInColumn = Array(7).fill(5)\n  }\n\n  updateBoard(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n\n    this.board[this.rowsLeftInColumn[column]][column] = {\n      color: this.players[this.currentPlayer].color,\n      playersMove: this.currentPlayer,\n      timeStamp: Date.now(),\n    }\n\n    this.rowsLeftInColumn[column] -= 1;\n    this.previewCell = {\n      column: null,\n      row: null\n    }\n\n    if (this.checkForWinner()) return\n    this.updateCurrentPlayer();\n  }\n\n  previewSelection(column) {\n\n    if (this.rowsLeftInColumn[column] === -1) return\n    this.previewCell = {\n      row: this.rowsLeftInColumn[column],\n      column\n    }\n\n\n  }\n\n  updateCurrentPlayer() {\n    this.currentPlayer = this.currentPlayer ? 0 : 1\n  }\n\n  checkForWinner() {\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 7; j++) {\n        if (this.vertical(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.horizontal(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.downRight(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 3; j < 7; j++) {\n        if (this.downLeft(i, j)) {\n          this.winner = true;\n          return true;\n        }\n      }\n    }\n\n  }\n\n  vertical(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n\n  horizontal(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downRight(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row + i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n  downLeft(column, row) {\n    for(let i = 1; i < 4; i++) {\n      if (this.board[column][row].playersMove === null || this.board[column][row].playersMove !== this.board[column + i][row - i].playersMove) {\n        return false\n      }\n    }\n    return true\n  }\n\n}\n\nexport default Game\n","import React from 'react'\n\nimport GameBoard from '../GameBoard/GameBoard'\nimport GameInfo from '../GameInfo/GameInfo'\nimport Game from '../resources/game';\n\nclass Connect4 extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      game: new Game()\n    }\n\n    this.selectColumn = this.selectColumn.bind(this)\n    this.previewSelection = this.previewSelection.bind(this)\n    this.changePlayerColor = this.changePlayerColor.bind(this)\n    this.handleColorChangeComplete = this.handleColorChangeComplete.bind(this)\n    this.restartGame = this.restartGame.bind(this)\n  }\n\n  selectColumn(column) {\n\n    if (this.state.game.winner) return\n\n    this.state.game.updateBoard(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n\n    this.previewSelection(column)\n\n  }\n\n  previewSelection(column) {\n    if (this.state.game.winner) return\n    this.state.game.previewSelection(column);\n    this.setState(prevState => {\n      return prevState;\n    })\n  }\n\n  handleColorChangeComplete(player, newColor) {\n    this.setState(prevState => {\n      prevState.game.players[player].color = newColor;\n      return prevState;\n    })\n  }\n\n  changePlayerColor(player, color = 'green') {\n    this.setState(prevState => {\n      prevState.game.players[player].color = color;\n      return prevState;\n    })\n  }\n\n  restartGame() {\n    this.setState({\n      game: new Game()\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n\n        <GameBoard\n          selectColumn={this.selectColumn}\n          previewSelection={this.previewSelection}\n          game={this.state.game}\n        />\n        <GameInfo\n          restartGame={this.restartGame}\n          changePlayerColor={this.changePlayerColor}\n          handleColorChangeComplete={this.handleColorChangeComplete}\n          game={this.state.game}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Connect4\n\n","import React, { Component } from 'react';\n\nimport Connect4 from './Components/Connect4/Connect4';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Connect4 />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}